{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "String"
        },
        "tenant": {
            "type": "String"
        }, 
        "adfName": {
            "type": "string",
            "metadata": {
                "description": "description"
            }
        },
        "resourceGroup": {
            "defaultValue": "[resourceGroup().name]",
            "type": "string"
        },
        "funcName": {
            "type": "String"
        },        
        "keyVaultName": {
            "type": "String"
        },   
        "keyVaultSku": {
            "type": "String"
        },
        "keyVaultEnabledForDeployment": {
            "type": "Bool"
        },
        "keyVaultEnabledForTemplateDeployment": {
            "type": "Bool"
        },
        "keyVaultEnabledForDiskEncryption": {
            "type": "Bool"
        },
        "keyVaultEnableRbacAuthorization": {
            "type": "Bool"
        },
        "keyVaultEnableSoftDelete": {
            "type": "Bool"
        },
        "keyVaultSoftDeleteRetentionInDays": {
            "type": "Int"
        },
        "keyVaultNetworkRuleBypassOptions": {
            "type": "string",
            "defaultValue": "AzureServices",
            "allowedValues": [
                "None",
                "AzureServices"
            ],
            "metadata": {
                "description": "Tells what traffic can bypass network rules. This can be 'AzureServices' or 'None'. If not specified the default is 'AzureServices'."
            }
        },
        "keyVaultNetworkRuleAction": {
            "type": "string",
            "defaultValue": "Allow",
            "allowedValues": [
                "Allow",
                "Deny"
            ],
            "metadata": {
                "description": "The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated."
            }
        },
        "keyVaultIpRules": {
            "type": "array",
            "defaultValue": [
            ],
            "metadata": {
                "description": "An array of IPv4 addresses or rangea in CIDR notation, e.g. '124.56.78.91' (simple IP address) or '124.56.78.0/24' (all addresses that start with 124.56.78)."
            }
        },
        "keyVaultVirtualNetworkRules": {
            "type": "array",
            "defaultValue": [
            ],
            "metadata": {
                "description": "An array for resourceIds for the virtualNetworks allowed to access the vault."
            }
        },

        "SQLAdministratorLogin": {
            "type": "SecureString"
        },
        "SQLAdministratorLoginPassword": {
            "type": "SecureString"
        },
        "SQLDatabaseName": {
            "type": "String"
        },
        "SQLServerName": {
            "type": "String"
        }       
    },
    "variables": {
    },
    "resources": [
        {
            "apiVersion": "2018-06-01",
            "name": "[parameters('adfName')]",
            "location": "[parameters('location')]",
            "type": "Microsoft.DataFactory/factories",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {}
        },
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2019-06-01-preview",
            "name": "[parameters('SQLServerName')]",
            "location": "[parameters('location')]",
            "properties": {},
            "resources": []
        }, 
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[parameters('funcName')]",
            "location": "[parameters('location')]",
            "kind": "functionapp",
            "properties": {}
        },               
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2018-02-14",
            "name": "[parameters('keyVaultName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories',parameters('adfName'))]"
            ],
            "tags": {},
            "properties": {
                "enabledForDeployment": "[parameters('keyVaultEnabledForDeployment')]",
                "enabledForTemplateDeployment": "[parameters('keyVaultEnabledForTemplateDeployment')]",
                "enabledForDiskEncryption": "[parameters('keyVaultEnabledForDiskEncryption')]",
                "enableRbacAuthorization": "[parameters('keyVaultEnableRbacAuthorization')]",
                "accessPolicies": [
                {
                    "tenantId": "[reference(resourceId('Microsoft.DataFactory/factories', parameters('adfName')), '2018-06-01', 'Full').identity.tenantId]",
                    "objectId": "[reference(resourceId('Microsoft.DataFactory/factories', parameters('adfName')), '2018-06-01', 'Full').identity.principalId]",
                    "permissions": {
                        "secrets": [
                            "get"
                        ]
                    }
                }
                ],
                "tenantId": "[parameters('tenant')]",
                "sku": {
                    "name": "[parameters('keyVaultSku')]",
                    "family": "A"
                },
                "enableSoftDelete": "[parameters('keyVaultEnableSoftDelete')]",
                "softDeleteRetentionInDays": "[parameters('keyVaultSoftDeleteRetentionInDays')]",
                "networkAcls": {
                    "bypass": "[parameters('keyVaultNetworkRuleBypassOptions')]",
                    "defaultAction": "[parameters('keyVaultNetworkRuleAction')]",
                    "copy": [
                        {
                            "name": "ipRules",
                            "count": "[length(parameters('keyVaultIpRules'))]",
                            "input": {
                                "value": "[parameters('keyVaultIpRules')[copyIndex('ipRules')]]"
                            }
                        },
                        {
                            "name": "virtualNetworkRules",
                            "count": "[length(parameters('keyVaultVirtualNetworkRules'))]",
                            "input": {
                                "id": "[parameters('keyVaultVirtualNetworkRules')[copyIndex('virtualNetworkRules')]]"
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2018-02-14",
            "name": "[concat(parameters('keyVaultName'), '/sqldbdpprocfwkmetadataadmname')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
            ],
            "properties": {
                "value": "[parameters('SQLAdministratorLogin')]",
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2018-02-14",
            "name": "[concat(parameters('keyVaultName'), '/sqldbdpprocfwkmetadataadmpassword')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
            ],
            "properties": {
                "value": "[parameters('SQLAdministratorLoginPassword')]",
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2018-02-14",
            "name": "[concat(parameters('keyVaultName'), '/funcdpprocfwkdefaultkey')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
            ],
            "properties": {
                "value": "[listkeys(concat(resourceId('Microsoft.Web/sites/', parameters('funcName')), '/host/default/'),'2016-08-01').functionKeys.default]",
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2018-02-14",
            "name": "[concat(parameters('keyVaultName'), '/sqldbdpprocfwkmetadataconnection')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
            ],
            "properties": {
                "value": "[concat('Server=tcp:',reference(parameters('SQLServerName')).fullyQualifiedDomainName,',1433;Initial Catalog=',parameters('SQLDatabaseName'),';Persist Security Info=False;User ID=',parameters('SQLAdministratorLogin'),';Password=',parameters('SQLAdministratorLoginPassword'),';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]",
                "attributes": {
                    "enabled": true
                }
            }
        }


    ],
    "outputs": {}
}